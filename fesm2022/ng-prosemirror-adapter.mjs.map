{"version":3,"file":"ng-prosemirror-adapter.mjs","sources":["../../../projects/ng-prosemirror-adapter/src/lib/ng-prosemirror-adapter.service.ts","../../../projects/ng-prosemirror-adapter/src/lib/components/ng-prosemirror-editor.component.ts","../../../projects/ng-prosemirror-adapter/src/lib/ng-prosemirror-adapter.component.ts","../../../projects/ng-prosemirror-adapter/src/lib/components/ng-prosemirror-node.component.ts","../../../projects/ng-prosemirror-adapter/src/lib/components/ng-prosemirror-plugin.component.ts","../../../projects/ng-prosemirror-adapter/src/lib/components/ng-prosemirror-widget.component.ts","../../../projects/ng-prosemirror-adapter/src/public-api.ts","../../../projects/ng-prosemirror-adapter/src/ng-prosemirror-adapter.ts"],"sourcesContent":["import {\n  ComponentRef,\n  Injectable, Injector, ViewContainerRef\n} from '@angular/core';\nimport {Decoration, EditorView} from \"prosemirror-view\";\nimport {NgProsemirrorAdapterProvider} from \"./ng-prosemirror-adapter.component\";\nimport {\n  NgEditorViewComponent, NgNodeViewUserOptions,\n  NgPluginViewUserOptions, NgWidgetUserOptions, NodeViewContext, NodeViewFactory,\n  PluginViewContext,\n  PluginViewFactory, WidgetViewContext, WidgetViewFactory\n} from \"./ngProsemirrorAdapter.type\";\nimport {CoreNodeView, CorePluginView, CoreWidgetView} from \"@prosemirror-adapter/core\";\nimport {nanoid} from \"nanoid\";\nimport {NgProsemirrorEditor} from \"./components/ng-prosemirror-editor.component\";\nimport {NgProsemirrorWidget} from \"./components/ng-prosemirror-widget.component\";\nimport {NgProsemirrorPlugin} from \"./components/ng-prosemirror-plugin.component\";\n\n/**\n * Returns the first child element of the given HTMLElement.\n * If the HTMLElement does not have a first child element, it returns the HTMLElement itself.\n *\n * @param {HTMLElement} el - The HTMLElement to get the first child element from.\n * @returns {HTMLElement} The first child element of the given HTMLElement, or the HTMLElement itself if it does not have a first child element.\n */\nconst firstElementChild = (el: HTMLElement) => {\n  if (el.firstElementChild) {\n    return el.firstElementChild;\n  }\n  return el;\n}\n\n@Injectable()\nexport class NgProsemirrorAdapterService {\n  constructor(\n    private _injector: Injector,\n    private _vcf: ViewContainerRef,\n  ) {\n  }\n\n  editor: NgProsemirrorEditor;\n\n  provider: NgProsemirrorAdapterProvider;\n\n  nodeView: Record<string, CoreNodeView<NgEditorViewComponent>> = {};\n  nodeViewContext: Record<string, NodeViewContext> = {};\n\n  updateNodeViewContext(key: string) {\n    const nodeView = this.nodeView[key];\n    if (!nodeView.view) {\n      return;\n    }\n    this.nodeViewContext[key] = {\n      ...this.nodeViewContext[key],\n      view: Object.assign(Object.create(Object.getPrototypeOf(nodeView.view)), nodeView.view),\n      getPos: nodeView.getPos,\n      node: nodeView.node,\n      selected: nodeView.selected,\n      decorations: nodeView.decorations,\n      innerDecorations: nodeView.innerDecorations,\n      contentRef: (element) => {\n        if (\n          element\n          && element instanceof HTMLElement\n          && nodeView.contentDOM\n          && element.firstChild !== nodeView.contentDOM\n        )\n          firstElementChild(element).appendChild(nodeView.contentDOM)\n      },\n    };\n  }\n\n  createNodeView: NodeViewFactory = (options: NgNodeViewUserOptions) => {\n    return (node, view, getPos, decorations, innerDecorations) => {\n      const componentRef = this._vcf.createComponent(options.component, {injector: this._injector});\n\n      const key = options.key || nanoid();\n      Object.keys(options.inputs || {}).forEach((key) => {\n        componentRef.setInput(key, options.inputs[key])\n      });\n\n      componentRef.setInput(\"provider\", this.provider);\n      componentRef.setInput(\"key\", key);\n      this.nodeView[key] = new CoreNodeView<NgEditorViewComponent>({\n        node,\n        view,\n        getPos,\n        decorations,\n        innerDecorations,\n        options: {\n          ...options,\n          component: componentRef,\n          onUpdate: () => {\n            options.onUpdate?.();\n            this.updateNodeViewContext(key);\n            this.nodeViewContext[key].contentRef(componentRef.instance.el.nativeElement);\n          },\n          selectNode: () => {\n            options.selectNode?.();\n            this.updateNodeViewContext(key);\n          },\n          deselectNode: () => {\n            options.deselectNode?.();\n            this.updateNodeViewContext(key);\n          },\n          destroy: () => {\n            options.destroy?.();\n            this.updateNodeViewContext(key);\n          },\n        }\n      });\n      firstElementChild(this.nodeView[key].dom).appendChild(componentRef.location.nativeElement);\n      this.updateNodeViewContext(key);\n      this.nodeViewContext[key].contentRef(componentRef.instance.el.nativeElement);\n      return this.nodeView[key];\n    };\n  }\n\n  pluginView: Record<string, CorePluginView<NgProsemirrorPlugin>> = {};\n  pluginViewContext: Record<string, PluginViewContext> = {};\n\n  updatePluginViewContext(key: string) {\n    const pluginView = this.pluginView[key];\n    if (!pluginView.view) {\n      return;\n    }\n    this.pluginViewContext[key] = {\n      view: Object.assign(Object.create(Object.getPrototypeOf(pluginView.view)), pluginView.view),\n      prevState: pluginView.prevState,\n    };\n  }\n\n  createPluginView: PluginViewFactory = (options: NgPluginViewUserOptions) => {\n    const key = options.key || nanoid();\n    const componentRef = this._vcf.createComponent(options.component, {injector: this._injector});\n\n    Object.keys(options.inputs || {}).forEach((key) => {\n      componentRef.setInput(key, options.inputs[key])\n    });\n\n    componentRef.setInput(\"provider\", this.provider);\n    componentRef.setInput('key', key);\n\n    return new Promise((resolve) => {\n      componentRef.instance.onPluginReady.subscribe((pluginView: CorePluginView<NgProsemirrorPlugin>) => {\n        resolve((view: EditorView) => {\n          this.pluginView[key] = pluginView || new CorePluginView<NgProsemirrorPlugin>({\n            view,\n            options: {\n              ...options,\n              component: componentRef.instance,\n              update: (view, prevState) => {\n                options.update?.(view, prevState);\n                this.updatePluginViewContext(key);\n              },\n              destroy: () => {\n                options.destroy?.()\n                this.pluginView[key].destroy();\n                delete this.pluginView[key];\n              },\n            }\n          });\n          this.updatePluginViewContext(key);\n          firstElementChild(this.provider.editor.el.nativeElement).appendChild(componentRef.location.nativeElement);\n          return this.pluginView[key];\n        })\n      });\n    })\n  }\n\n  widgetView: Record<string, CoreWidgetView<NgProsemirrorWidget>> = {};\n  widgetViewContext: Record<string, WidgetViewContext> = {};\n\n  updateWidgetViewContext(key: string) {\n    const widgetView = this.widgetView[key];\n    if (!widgetView.spec) {\n      return;\n    }\n    this.widgetViewContext[key] = {\n      ...this.widgetViewContext[key],\n      spec: widgetView.spec\n    };\n  }\n\n  createWidgetView: WidgetViewFactory = (options: NgWidgetUserOptions) => {\n    const componentRef = this._vcf.createComponent(options.component, {injector: this._injector});\n\n    const key = options.key || nanoid();\n    Object.keys(options.inputs || {}).forEach((key) => {\n      componentRef.setInput(key, options.inputs[key])\n    });\n\n    componentRef.setInput(\"provider\", this.provider);\n    componentRef.setInput(\"key\", key);\n\n    return (pos, spec) => {\n      this.widgetView[key] = new CoreWidgetView<NgProsemirrorWidget>({\n        pos,\n        spec,\n        options: {\n          ...options,\n          component: componentRef.instance\n        }\n      });\n\n      return Decoration.widget(pos, (view, getPos) => {\n        this.widgetView[key].bind(view, getPos)\n        this.updateWidgetViewContext(key);\n        firstElementChild(this.widgetView[key].dom).appendChild(componentRef.location.nativeElement);\n        return this.widgetView[key].dom\n      }, spec)\n    }\n  }\n}\n\n","import {Component, ElementRef} from \"@angular/core\";\nimport {NgProsemirrorAdapterProvider} from \"../ng-prosemirror-adapter.component\";\n\n@Component({\n  selector: 'ng-prosemirror-editor',\n  template: ``,\n  styles: [],\n  standalone: true\n})\nexport abstract class NgProsemirrorEditor {\n\n  constructor(public el: ElementRef) {\n  }\n\n  public provider: NgProsemirrorAdapterProvider;\n}\n","import {\n  Component, ContentChild\n} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgProsemirrorAdapterService} from \"./ng-prosemirror-adapter.service\";\nimport {NgProsemirrorEditor} from \"./components/ng-prosemirror-editor.component\";\n\n@Component({\n  selector: 'ng-prosemirror-adapter-provider',\n  standalone: true,\n  imports: [CommonModule],\n  template: `<ng-content/>`,\n  styles: `\n    :host {\n        display: block;\n        width: 100%;\n        height: 100%;\n    }\n  `,\n  providers: [NgProsemirrorAdapterService]\n})\nexport class NgProsemirrorAdapterProvider {\n\n  private _editorComp: NgProsemirrorEditor;\n\n  @ContentChild(NgProsemirrorEditor, {static: false})\n  public set editor(value: NgProsemirrorEditor) {\n    this._editorComp = value;\n    if (value) {\n      this._editorComp.provider = this;\n      this.service.editor = this._editorComp;\n    }\n  }\n\n  public get editor() {\n    return this._editorComp;\n  }\n\n  constructor(\n    public service: NgProsemirrorAdapterService) {\n    this.service.provider = this;\n  }\n\n  public createPluginView = this.service.createPluginView;\n  public createNodeView = this.service.createNodeView;\n  public createWidgetView = this.service.createWidgetView;\n}\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, Output} from \"@angular/core\";\nimport {NgProsemirrorAdapterProvider} from \"../ng-prosemirror-adapter.component\";\nimport {CoreNodeView} from \"@prosemirror-adapter/core\";\nimport {NgEditorViewComponent} from \"../ngProsemirrorAdapter.type\";\n\n\n@Component({\n  selector: 'ng-prosemirror-node',\n  template: ``,\n  styles: [],\n  standalone: true\n})\nexport abstract class NgProsemirrorNode implements AfterViewInit {\n  @Input() public key: string;\n  @Input() public provider: NgProsemirrorAdapterProvider;\n\n  constructor(public el: ElementRef) {\n  }\n\n  get context() {\n    return this.provider?.service?.nodeViewContext?.[this.key];\n  }\n\n  get view() {\n    return this.context?.view;\n  }\n\n  get contentRef() {\n    return this.context?.contentRef;\n  }\n\n  get getPos() {\n    return this.context?.getPos;\n  }\n\n  get setAttrs() {\n    return this.context?.setAttrs;\n  }\n\n  get node() {\n    return this.context?.node;\n  }\n\n  get selected() {\n    return this.context?.selected;\n  }\n\n  get decorations() {\n    return this.context?.decorations;\n  }\n  get innerDecorations(){\n    return this.context?.innerDecorations;\n  }\n\n  ngAfterViewInit(): void {\n    this.onNodeViewReady.emit(null);\n    this.context?.contentRef(this.el.nativeElement);\n  }\n\n  @Output() onNodeViewReady = new EventEmitter<CoreNodeView<NgEditorViewComponent>>();\n}\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, Output} from \"@angular/core\";\nimport {NgProsemirrorAdapterProvider} from \"../ng-prosemirror-adapter.component\";\nimport {CorePluginView} from \"@prosemirror-adapter/core\";\nimport {NgEditorViewComponent} from \"../ngProsemirrorAdapter.type\";\n\n\n@Component({\n  selector: 'ng-prosemirror-plugin',\n  template: ``,\n  styles: [],\n  standalone: true\n})\nexport abstract class NgProsemirrorPlugin implements AfterViewInit {\n  @Input() public key: string;\n  @Input() public provider: NgProsemirrorAdapterProvider;\n\n  @Output() onPluginReady = new EventEmitter<CorePluginView<NgEditorViewComponent>>();\n\n  constructor(public el: ElementRef) {\n  }\n\n  get context() {\n    return this.provider?.service?.pluginViewContext?.[this.key];\n  }\n\n  get view() {\n    return this.provider?.service?.pluginViewContext?.[this.key]?.view;\n  }\n\n  get state() {\n    return this.provider?.service?.pluginViewContext?.[this.key]?.view?.state;\n  }\n\n  get prevState() {\n    return this.provider?.service?.pluginViewContext?.[this.key]?.prevState;\n  }\n\n  ngAfterViewInit(): void {\n    this.onPluginReady.emit(null);\n  }\n}\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, Output} from \"@angular/core\";\nimport {NgProsemirrorAdapterProvider} from \"../ng-prosemirror-adapter.component\";\nimport {CoreNodeView, CoreWidgetView} from \"@prosemirror-adapter/core\";\nimport {NgEditorViewComponent} from \"../ngProsemirrorAdapter.type\";\n\n\n@Component({\n  selector: 'ng-prosemirror-widget',\n  template: ``,\n  styles: [],\n  standalone: true\n})\nexport abstract class NgProsemirrorWidget implements AfterViewInit {\n  @Input() public key: string;\n  @Input() public provider: NgProsemirrorAdapterProvider;\n\n  constructor(public el: ElementRef) {\n  }\n\n  get context() {\n    return this.provider?.service?.widgetViewContext?.[this.key];\n  }\n\n  get view() {\n    return this.provider?.service?.widgetViewContext?.[this.key]?.view;\n  }\n\n  get getPos() {\n    return this.provider.service.widgetViewContext?.[this.key]?.getPos;\n  }\n\n  get spec() {\n    return this.provider.service.widgetViewContext?.[this.key]?.spec;\n  }\n\n  ngAfterViewInit(): void {\n    this.onWidgetViewReady.emit(null);\n  }\n\n  @Output() onWidgetViewReady = new EventEmitter<CoreWidgetView<NgEditorViewComponent>>();\n}\n","/*\n * Public API Surface of ng-prosemirror-adapter\n */\n\nexport * from './lib/ng-prosemirror-adapter.service';\nexport * from './lib/ng-prosemirror-adapter.component';\nexport * from './lib/ngProsemirrorAdapter.type';\nexport * from './lib/components/ng-prosemirror-editor.component';\nexport * from './lib/components/ng-prosemirror-node.component';\nexport * from './lib/components/ng-prosemirror-plugin.component';\nexport * from './lib/components/ng-prosemirror-widget.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NgProsemirrorAdapterService"],"mappings":"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"}